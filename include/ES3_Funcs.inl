// There's a lot of functions that are in ES3.2 library! Should i change it in the future to support ES 3.0?

GL_ALL(glActiveTexture);
GL_ALL(glAttachShader);
AS_ALL(glAttachObject, glAttachShader);
GL_ALL(glBindAttribLocation);
GL_ALL(glBindBuffer);
GLIN_ALL(glBindFramebuffer);
GL_ALL(glBindRenderbuffer);
GLIN_ALL(glBindTexture);
GL_ALL(glBlendColor);
GL_ALL(glBlendEquation);
GL_ALL(glBlendEquationSeparate);
GL_ALL(glBlendFunc);
GL_ALL(glBlendFuncSeparate);
GL_ALL(glBufferData);
GL_ALL(glBufferSubData);
GL_ALL(glCheckFramebufferStatus);
GLIN_ALL(glClear);
GLIN_ALL(glClearColor);
GL_ALL(glClearDepthf);
AS_ALL(glClearDepth, glClearDepthf);
GL_ALL(glClearStencil);
GL_ALL(glColorMask);
GL_ALL(glCompileShader);
GLIN_ALL(glCompressedTexImage2D);
GL_ALL(glCompressedTexSubImage2D);
GL_ALL(glCopyTexImage2D);
GL_ALL(glCopyTexSubImage2D);
GL_ALL(glCreateProgram);
AS_ALL(glCreateProgramObject, glCreateProgram);
GLIN_ALL(glCreateShader);
AS_GLIN_ALL(glCreateShaderObject, glCreateShader);
GL_ALL(glCullFace);
GL_ALL(glDeleteBuffers);
GL_ALL(glDeleteFramebuffers);
GL_ALL(glDeleteProgram);
GL_ALL(glDeleteRenderbuffers);
GL_ALL(glDeleteShader);
GLIN_ALL(glDeleteTextures);
GL_ALL(glDepthFunc);
GL_ALL(glDepthMask);
GL_ALL(glDepthRangef);
AS_ALL(glDepthRange, glDepthRangef);
GL_ALL(glDetachShader);
AS_ALL(glDetachObject, glDetachShader);
GLIN_ALL(glDisable);
GL_ALL(glDisableVertexAttribArray);
GL_ALL(glDrawArrays);
GL_ALL(glDrawElements);
GLIN_ALL(glEnable);
GL_ALL(glEnableVertexAttribArray);
GL_ALL(glFinish);
GL_ALL(glFlush);
GL_ALL(glFramebufferRenderbuffer);
GL_ALL(glFramebufferTexture2D);
GL_ALL(glFrontFace);
GL_ALL(glGenBuffers);
GL_ALL(glGenerateMipmap);
GL_ALL(glGenFramebuffers);
GL_ALL(glGenRenderbuffers);
GLIN_ALL(glGenTextures);
GL_ALL(glGetActiveAttrib);
GL_ALL(glGetActiveUniform);
GL_ALL(glGetAttachedShaders);
GL_ALL(glGetAttribLocation);
GL_ALL(glGetBufferParameteriv);
GL_ALL(glGetError);
GL_ALL(glGetFramebufferAttachmentParameteriv);
GL_MAP(glGetProgramiv); GL_EXT(glGetProgramiv); GLIN_ARB(glGetProgramiv);
GL_ALL(glGetProgramInfoLog);
GL_ALL(glGetRenderbufferParameteriv);
GL_ALL(glGetShaderiv);
GL_ALL(glGetShaderInfoLog);
GL_ALL(glGetShaderPrecisionFormat);
GL_ALL(glGetShaderSource);
GL_ALL(glGetTexParameterfv);
GL_ALL(glGetTexParameteriv);
GL_ALL(glGetUniformfv);
GL_ALL(glGetUniformiv);
GL_ALL(glGetUniformLocation);
GL_ALL(glGetVertexAttribfv);
GL_ALL(glGetVertexAttribiv);
GL_ALL(glGetVertexAttribPointerv);
GL_ALL(glHint);
GL_ALL(glIsBuffer);
GLIN_ALL(glIsEnabled);
GL_ALL(glIsFramebuffer);
GL_MAP(glIsProgram); GL_EXT(glIsProgram); GLIN_ARB(glIsProgram);
GL_ALL(glIsRenderbuffer);
GL_ALL(glIsShader);
GL_ALL(glIsTexture);
GL_ALL(glLineWidth);
GLIN_ALL(glLinkProgram);
GL_ALL(glPixelStorei);
GL_ALL(glPolygonOffset);
GL_ALL(glReadPixels);
GL_ALL(glReleaseShaderCompiler);
GL_ALL(glRenderbufferStorage);
GL_ALL(glSampleCoverage);
GL_ALL(glScissor);
GL_ALL(glShaderBinary);
GL_ALL(glShaderSource);
GL_ALL(glStencilFunc);
GL_ALL(glStencilFuncSeparate);
GL_ALL(glStencilMask);
GL_ALL(glStencilMaskSeparate);
GL_ALL(glStencilOp);
GL_ALL(glStencilOpSeparate);
GLIN_ALL(glTexImage2D);
GL_ALL(glTexParameterf);
GL_ALL(glTexParameterfv);
GL_ALL(glTexParameteri);
GL_ALL(glTexParameteriv);
GLIN_ALL(glTexSubImage2D);
GL_ALL(glUniform1f);
GL_ALL(glUniform1fv);
GL_ALL(glUniform1i);
GL_ALL(glUniform1iv);
GL_ALL(glUniform2f);
GL_ALL(glUniform2fv);
GL_ALL(glUniform2i);
GL_ALL(glUniform2iv);
GL_ALL(glUniform3f);
GL_ALL(glUniform3fv);
GL_ALL(glUniform3i);
GL_ALL(glUniform3iv);
GL_ALL(glUniform4f);
GL_ALL(glUniform4fv);
GL_ALL(glUniform4i);
GL_ALL(glUniform4iv);
GL_ALL(glUniformMatrix2fv);
GL_ALL(glUniformMatrix3fv);
GL_ALL(glUniformMatrix4fv);
GL_ALL(glUseProgram);
AS_ALL(glUseProgramObject, glUseProgram);
GL_ALL(glValidateProgram);
GL_ALL(glVertexAttrib1f);
GL_ALL(glVertexAttrib1fv);
GL_ALL(glVertexAttrib2f);
GL_ALL(glVertexAttrib2fv);
GL_ALL(glVertexAttrib3f);
GL_ALL(glVertexAttrib3fv);
GL_ALL(glVertexAttrib4f);
GL_ALL(glVertexAttrib4fv);
GL_ALL(glVertexAttribPointer);
GL_ALL(glViewport);
GL_ALL(glReadBuffer);
GL_ALL(glDrawRangeElements);
GL_ALL(glTexImage3D);
GL_ALL(glTexSubImage3D);
GL_ALL(glCopyTexSubImage3D);
GL_ALL(glCompressedTexImage3D);
GL_ALL(glCompressedTexSubImage3D);
// Queries
// Those are completely incomplete as a PC's OpenGL
//GL_ALL(glGenQueries);
//GL_ALL(glDeleteQueries);
//GL_ALL(glIsQuery);
//GL_ALL(glBeginQuery);
//GL_ALL(glEndQuery);
//GL_ALL(glGetQueryiv);
//GL_ALL(glGetQueryObjectuiv);
// Queries End
GL_ALL(glUnmapBuffer);
GL_ALL(glGetBufferPointerv);
GL_ALL(glDrawBuffers);
GL_ALL(glUniformMatrix2x3fv);
GL_ALL(glUniformMatrix3x2fv);
GL_ALL(glUniformMatrix2x4fv);
GL_ALL(glUniformMatrix4x2fv);
GL_ALL(glUniformMatrix3x4fv);
GL_ALL(glUniformMatrix4x3fv);
GL_ALL(glBlitFramebuffer);
GL_ALL(glRenderbufferStorageMultisample);
GL_ALL(glFramebufferTextureLayer);
GL_ALL(glMapBufferRange);
GL_ALL(glFlushMappedBufferRange);
GL_ALL(glBindVertexArray);
GL_ALL(glDeleteVertexArrays);
GL_ALL(glGenVertexArrays);
GL_ALL(glIsVertexArray);
GL_ALL(glGetIntegeri_v);
GL_ALL(glBeginTransformFeedback);
GL_ALL(glEndTransformFeedback);
GL_ALL(glBindBufferRange);
GL_ALL(glBindBufferBase);
GL_ALL(glTransformFeedbackVaryings);
GL_ALL(glGetTransformFeedbackVarying);
GL_ALL(glVertexAttribIPointer);
GL_ALL(glGetVertexAttribIiv);
GL_ALL(glGetVertexAttribIuiv);
GL_ALL(glVertexAttribI4i);
GL_ALL(glVertexAttribI4ui);
GL_ALL(glVertexAttribI4iv);
GL_ALL(glVertexAttribI4uiv);
GL_ALL(glGetUniformuiv);
GL_ALL(glGetFragDataLocation);
GL_ALL(glUniform1ui);
GL_ALL(glUniform2ui);
GL_ALL(glUniform3ui);
GL_ALL(glUniform4ui);
GL_ALL(glUniform1uiv);
GL_ALL(glUniform2uiv);
GL_ALL(glUniform3uiv);
GL_ALL(glUniform4uiv);
GL_ALL(glClearBufferiv);
GL_ALL(glClearBufferuiv);
GL_ALL(glClearBufferfv);
GL_ALL(glClearBufferfi);
GL_ALL(glCopyBufferSubData);
GL_ALL(glGetUniformIndices);
GL_ALL(glGetActiveUniformsiv);
GL_ALL(glGetUniformBlockIndex);
GL_ALL(glGetActiveUniformBlockiv);
GL_ALL(glGetActiveUniformBlockName);
GL_ALL(glUniformBlockBinding);
GL_ALL(glDrawArraysInstanced);
GL_ALL(glDrawElementsInstanced);
GL_ALL(glFenceSync);
GL_ALL(glIsSync);
GL_ALL(glDeleteSync);
GL_ALL(glClientWaitSync);
GL_ALL(glWaitSync);
GL_ALL(glGetSynciv);
GL_ALL(glGetInteger64i_v);
GL_ALL(glGetBufferParameteri64v);
GL_ALL(glGenSamplers);
GL_ALL(glDeleteSamplers);
GL_ALL(glIsSampler);
GL_ALL(glBindSampler);
GL_ALL(glSamplerParameteri);
GL_ALL(glSamplerParameteriv);
GL_ALL(glSamplerParameterf);
GL_ALL(glSamplerParameterfv);
GL_ALL(glGetSamplerParameteriv);
GL_ALL(glGetSamplerParameterfv);
GL_ALL(glVertexAttribDivisor);
GL_ALL(glBindTransformFeedback);
GL_ALL(glDeleteTransformFeedbacks);
GL_ALL(glGenTransformFeedbacks);
GL_ALL(glIsTransformFeedback);
GL_ALL(glPauseTransformFeedback);
GL_ALL(glResumeTransformFeedback);
GL_ALL(glGetProgramBinary);
GL_ALL(glProgramBinary);
GL_ALL(glProgramParameteri);
GL_ALL(glInvalidateFramebuffer);
GL_ALL(glInvalidateSubFramebuffer);
GL_ALL(glTexStorage2D);
GL_ALL(glTexStorage3D);
GL_ALL(glGetInternalformativ);
GL_ALL(glDispatchCompute);
GL_ALL(glDispatchComputeIndirect);
GL_ALL(glDrawArraysIndirect);
GL_ALL(glDrawElementsIndirect);
GL_ALL(glFramebufferParameteri);
GL_ALL(glGetFramebufferParameteriv);
GL_ALL(glGetProgramInterfaceiv);
GL_ALL(glGetProgramResourceIndex);
GL_ALL(glGetProgramResourceName);
GL_ALL(glGetProgramResourceiv);
GL_ALL(glGetProgramResourceLocation);
GL_ALL(glUseProgramStages);
GL_ALL(glActiveShaderProgram);
GL_ALL(glCreateShaderProgramv);
GL_ALL(glBindProgramPipeline);
GL_ALL(glDeleteProgramPipelines);
GL_ALL(glGenProgramPipelines);
GL_ALL(glIsProgramPipeline);
GL_ALL(glGetProgramPipelineiv);
GL_ALL(glProgramUniform1i);
GL_ALL(glProgramUniform2i);
GL_ALL(glProgramUniform3i);
GL_ALL(glProgramUniform4i);
GL_ALL(glProgramUniform1ui);
GL_ALL(glProgramUniform2ui);
GL_ALL(glProgramUniform3ui);
GL_ALL(glProgramUniform4ui);
GL_ALL(glProgramUniform1f);
GL_ALL(glProgramUniform2f);
GL_ALL(glProgramUniform3f);
GL_ALL(glProgramUniform4f);
GL_ALL(glProgramUniform1iv);
GL_ALL(glProgramUniform2iv);
GL_ALL(glProgramUniform3iv);
GL_ALL(glProgramUniform4iv);
GL_ALL(glProgramUniform1uiv);
GL_ALL(glProgramUniform2uiv);
GL_ALL(glProgramUniform3uiv);
GL_ALL(glProgramUniform4uiv);
GL_ALL(glProgramUniform1fv);
GL_ALL(glProgramUniform2fv);
GL_ALL(glProgramUniform3fv);
GL_ALL(glProgramUniform4fv);
GL_ALL(glProgramUniformMatrix2fv);
GL_ALL(glProgramUniformMatrix3fv);
GL_ALL(glProgramUniformMatrix4fv);
GL_ALL(glProgramUniformMatrix2x3fv);
GL_ALL(glProgramUniformMatrix3x2fv);
GL_ALL(glProgramUniformMatrix2x4fv);
GL_ALL(glProgramUniformMatrix4x2fv);
GL_ALL(glProgramUniformMatrix3x4fv);
GL_ALL(glProgramUniformMatrix4x3fv);
GL_ALL(glValidateProgramPipeline);
GL_ALL(glGetProgramPipelineInfoLog);
GL_ALL(glBindImageTexture);
GL_ALL(glGetBooleani_v);
GL_ALL(glMemoryBarrier);
GL_ALL(glMemoryBarrierByRegion);
GL_ALL(glTexStorage2DMultisample);
GL_ALL(glGetMultisamplefv);
GL_ALL(glSampleMaski);
GL_ALL(glGetTexLevelParameteriv);
GL_ALL(glGetTexLevelParameterfv);
GL_ALL(glBindVertexBuffer);
GL_ALL(glVertexAttribFormat);
GL_ALL(glVertexAttribIFormat);
GL_ALL(glVertexAttribBinding);
GL_ALL(glVertexBindingDivisor);
GL_ALL(glBlendBarrier);
GL_ALL(glCopyImageSubData);
GL_ALL(glDebugMessageControl);
GL_ALL(glDebugMessageInsert);
GL_ALL(glDebugMessageCallback);
GL_ALL(glGetDebugMessageLog);
GL_ALL(glPushDebugGroup);
GL_ALL(glPopDebugGroup);
GL_ALL(glObjectLabel);
GL_ALL(glGetObjectLabel);
GL_ALL(glObjectPtrLabel);
GL_ALL(glGetObjectPtrLabel);
GL_ALL(glGetPointerv);
GL_ALL(glEnablei);
GL_ALL(glDisablei);
GL_ALL(glBlendEquationi);
GL_ALL(glBlendEquationSeparatei);
GL_ALL(glBlendFunci);
GL_ALL(glBlendFuncSeparatei);
GL_ALL(glColorMaski);
GL_ALL(glIsEnabledi);
GL_ALL(glDrawElementsBaseVertex);
GLIN_ALL(glDrawRangeElementsBaseVertex);
GL_ALL(glDrawElementsInstancedBaseVertex);
GL_ALL(glFramebufferTexture);
GL_ALL(glPrimitiveBoundingBox);
GL_ALL(glGetGraphicsResetStatus);
GL_ALL(glReadnPixels);
GL_ALL(glGetnUniformfv);
GL_ALL(glGetnUniformiv);
GL_ALL(glGetnUniformuiv);
GL_ALL(glMinSampleShading);
GL_ALL(glPatchParameteri);
GL_ALL(glTexParameterIiv);
GL_ALL(glTexParameterIuiv);
GL_ALL(glGetTexParameterIiv);
GL_ALL(glGetTexParameterIuiv);
GL_ALL(glSamplerParameterIiv);
GL_ALL(glSamplerParameterIuiv);
GL_ALL(glGetSamplerParameterIiv);
GL_ALL(glGetSamplerParameterIuiv);
GL_ALL(glTexBuffer);
GL_ALL(glTexBufferRange);
GL_ALL(glTexStorage3DMultisample);
// OES
GL_MAP(glEGLImageTargetTexture2DOES);
GL_MAP(glEGLImageTargetRenderbufferStorageOES);
GL_MAP(glGetProgramBinaryOES);
GL_MAP(glProgramBinaryOES);
GL_MAP(glMinSampleShadingOES);
GL_MAP(glTexImage3DOES);
GL_MAP(glTexSubImage3DOES);
GL_MAP(glCopyTexSubImage3DOES);
GL_MAP(glCompressedTexImage3DOES);
GL_MAP(glCompressedTexSubImage3DOES);
GL_MAP(glFramebufferTexture3DOES);
AS_ALL(glFramebufferTexture3D, glFramebufferTexture3DOES);
GL_MAP(glTexStorage3DMultisampleOES);
GL_MAP(glTextureViewOES);
// AMD
GL_MAP(glGetPerfMonitorGroupsAMD);
GL_MAP(glGetPerfMonitorCountersAMD);
GL_MAP(glGetPerfMonitorGroupStringAMD);
GL_MAP(glGetPerfMonitorCounterStringAMD);
GL_MAP(glGetPerfMonitorCounterInfoAMD);
GL_MAP(glGenPerfMonitorsAMD);
GL_MAP(glDeletePerfMonitorsAMD);
GL_MAP(glSelectPerfMonitorCountersAMD);
GL_MAP(glBeginPerfMonitorAMD);
GL_MAP(glEndPerfMonitorAMD);
GL_MAP(glGetPerfMonitorCounterDataAMD);
// EXT (as ...)
AS_MAP(glEGLImageTargetTexStorage, glEGLImageTargetTexStorageEXT);
AS_MAP(glBindFragDataLocationIndexed, glBindFragDataLocationIndexedEXT);
AS_MAP(glBindFragDataLocation, glBindFragDataLocationEXT);
AS_MAP(glGetProgramResourceLocationIndex, glGetProgramResourceLocationIndexEXT);
AS_MAP(glGetFragDataIndex, glGetFragDataIndexEXT);
AS_MAP(glClipControl, glClipControlEXT);
AS_MAP(glCopyImageSubData, glCopyImageSubDataEXT);
AS_MAP(glLabelObject, glLabelObjectEXT);
AS_MAP(glGetObjectLabel, glGetObjectLabelEXT);
AS_MAP(glInsertEventMarker, glInsertEventMarkerEXT);
AS_MAP(glPushGroupMarker, glPushGroupMarkerEXT);
AS_MAP(glPopGroupMarker, glPopGroupMarkerEXT);
AS_MAP(glDiscardFramebuffer, glDiscardFramebufferEXT);
AS_MAP(glEnablei, glEnableiEXT);
AS_MAP(glDisablei, glDisableiEXT);
AS_MAP(glBlendEquationi, glBlendEquationiEXT);
AS_MAP(glBlendEquationSeparatei, glBlendEquationSeparateiEXT);
AS_MAP(glBlendFunci, glBlendFunciEXT);
AS_MAP(glBlendFuncSeparatei, glBlendFuncSeparateiEXT);
AS_MAP(glColorMaski, glColorMaskiEXT);
AS_MAP(glIsEnabledi, glIsEnablediEXT);
AS_MAP(glFramebufferTexture, glFramebufferTextureEXT);
AS_MAP(glGetUnsignedBytev, glGetUnsignedBytevEXT);
AS_MAP(glGetUnsignedBytei_v, glGetUnsignedBytei_vEXT);
AS_MAP(glDeleteMemoryObjects, glDeleteMemoryObjectsEXT);
AS_MAP(glIsMemoryObject, glIsMemoryObjectEXT);
AS_MAP(glCreateMemoryObjects, glCreateMemoryObjectsEXT);
AS_MAP(glMemoryObjectParameteriv, glMemoryObjectParameterivEXT);
AS_MAP(glGetMemoryObjectParameteriv, glGetMemoryObjectParameterivEXT);
AS_MAP(glTexStorageMem2D, glTexStorageMem2DEXT);
AS_MAP(glTexStorageMem2DMultisample, glTexStorageMem2DMultisampleEXT);
AS_MAP(glTexStorageMem3D, glTexStorageMem3DEXT);
AS_MAP(glTexStorageMem3DMultisample, glTexStorageMem3DMultisampleEXT);
AS_MAP(glImportMemoryFd, glImportMemoryFdEXT);
AS_MAP(glRenderbufferStorageMultisample, glRenderbufferStorageMultisampleEXT);
AS_MAP(glFramebufferTexture2DMultisample, glFramebufferTexture2DMultisampleEXT);
AS_MAP(glPrimitiveBoundingBox, glPrimitiveBoundingBoxEXT);
AS_MAP(glGetGraphicsResetStatus, glGetGraphicsResetStatusEXT);
AS_MAP(glReadnPixels, glReadnPixelsEXT);
AS_MAP(glGetnUniformfv, glGetnUniformfvEXT);
AS_MAP(glGetnUniformiv, glGetnUniformivEXT);
AS_MAP(glPatchParameteri, glPatchParameteriEXT);
AS_MAP(glTexParameterIiv, glTexParameterIivEXT);
AS_MAP(glTexParameterIuiv, glTexParameterIuivEXT);
AS_MAP(glGetTexParameterIiv, glGetTexParameterIivEXT);
AS_MAP(glGetTexParameterIuiv, glGetTexParameterIuivEXT);
AS_MAP(glSamplerParameterIiv, glSamplerParameterIivEXT);
AS_MAP(glSamplerParameterIuiv, glSamplerParameterIuivEXT);
AS_MAP(glGetSamplerParameterIiv, glGetSamplerParameterIivEXT);
AS_MAP(glGetSamplerParameterIuiv, glGetSamplerParameterIuivEXT);
AS_MAP(glTexBuffer, glTexBufferEXT);
AS_MAP(glTexBufferRange, glTexBufferRangeEXT);
// EXT end
GL_MAP(glFramebufferTextureMultiviewOVR);
GL_MAP(glFramebufferTextureMultisampleMultiviewOVR);
AS_ALL(glAlphaFunc, glAlphaFuncQCOM);
GL_MAP(glExtGetTexLevelParameterivQCOM);
GL_MAP(glTextureFoveationParametersQCOM);
GL_MAP(glStartTilingQCOM);
GL_MAP(glEndTilingQCOM);
GL_ALL(glGetString);
GL_ALL(glGetStringi);
GL_ALL(glGetBooleanv);
GL_ALL(glGetFloatv);
AS_MAP(glGetDoublev, glGetFloatv);
GLIN_ALL(glGetIntegerv);
GL_ALL(glGetInteger64v);